pipeline {
    agent 'any'
    tools {
        jdk 'jdk1.8'
        maven 'maven3'
    }
    stages {
        stage("pull code git"){
            steps{
                echo "pull code from git"
                git "https://gitlab.com/jagarlamudirajesh34/kubernetes_we.git"
            }
        }
        stage("build maven"){
            steps{
                echo "Build App using Maven" 
                sh "mvn clean"
                sh "mvn install"
            }
        }
        stage("artifactory push"){
            steps{
                echo "Push Artifactry to JFROG"
                script {			 
                     def server = Artifactory.server 'myjfrog' 
                     def uploadSpec = """{
                       "files": [
                            {
                              "pattern": "/var/lib/jenkins/.m2/repository/com/srish/mvn-hello-world/1.5/mvn-hello-world-1.5.war",
                              "target": "app/"
                            }
                                ]
                    }"""
	                server.upload(uploadSpec)
	            }
	         
            }
        }
        stage("ansible - APP"){
            steps {
                echo "Ansible App Playbook"
                sh "ansible-playbook app_playbook.yaml --syntax-check"
                sh "ansible-playbook app_playbook.yaml"
            }
        }
        stage("docker imaage"){
            steps{
                echo "docker image build"
                sh "docker build -t app:1 ."
                sh "docker tag app:1 303627538160.dkr.ecr.ap-south-1.amazonaws.com/app:1"
                sh $(aws ecr get-login --no-include-email)
                sh "docker push 303627538160.dkr.ecr.ap-south-1.amazonaws.com/app:1"
            }
        }
    }
}
